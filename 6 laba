import sqlite3

def create_and_fill_table(file_path):
    try:
        conn = sqlite3.connect('d.db')
        cursor = conn.cursor()

        cursor.execute('''CREATE TABLE IF NOT EXISTS data
                          (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, age INTEGER, occupation TEXT)''')

        with open(file_path, 'r') as file:
            for line in file:
                data_parts = line.strip().split(',')
                
                cursor.execute("INSERT INTO data (name, age, occupation) VALUES (?, ?, ?)",
                               (data_parts[0], data_parts[1], data_parts[2]))

        conn.commit()
        conn.close()

        print("Таблица успешно создана и заполнена данными.")
    except Exception as e:
        print(f"Произошла ошибка: {e}")

def get_db_data(name: str):
    con = sqlite3.connect('d.db')
    cursor = con.cursor()
    cursor.execute(f"SELECT * FROM {name}")
    result = cursor.fetchall()
    con.close()
    return result

def print_db_data(name: str):
    con = sqlite3.connect('d.db')
    cursor = con.cursor()
    cursor.execute(f"SELECT * FROM {name}")
    result = cursor.fetchall()
    con.close()
    for el in result:
        print(el)

def drop_table(name: str):
    con = sqlite3.connect('d.db')
    con.execute(f"DROP TABLE {name}")
    con.commit()
    con.close()

# Пример использования функции
file_path = 'data'
create_and_fill_table(file_path)
print_db_data("data")
drop_table("data")
